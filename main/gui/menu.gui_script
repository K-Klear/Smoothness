local LVL = require("main.levels.levels")

local function unload_level(self)
	if self.level then
		msg.post(self.level[hash("/char")], hash("delete_level"))
		self.level = nil
	end
end

local function load_level(self)
	unload_level(self)
	self.level = collectionfactory.create("/levels#"..LVL.list[LVL.current].id, nil, nil, {[hash("/char")] = LVL.list[LVL.current].props})
	gui.set_enabled(gui.get_node("GPU"), true)
end

function init(self)
	msg.post(".", hash("acquire_input_focus"))
	msg.post("@render:", "use_fixed_projection", {near = -2, far = 2, zoom = 1})
	gui.set_enabled(gui.get_node("level_name"), false)
	gui.set_enabled(gui.get_node("GPU"), false)
end

local function start_level(self)
	load_level(self)
	gui.set_text(gui.get_node("level_name_text"), LVL.list[LVL.current].title)
	gui.set_enabled(gui.get_node("level_name"), true)
	gui.set_enabled(gui.get_node("start"), false)
	timer.delay(2, false, function()
		gui.set_enabled(gui.get_node("level_name"), false)
		msg.post(self.level[hash("/char")], hash("start"))
	end)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("level_complete") then
		unload_level(self)
		if LVL.list[LVL.current + 1] then
			LVL.current = LVL.current + 1
			start_level(self)
		else
			LVL.current = 1
			gui.set_enabled(gui.get_node("start"), true)
			gui.set_enabled(gui.get_node("GPU"), false)
		end
	elseif message_id == hash("reset_level") then
		unload_level(self)
		start_level(self)
	elseif message_id == hash("change_frequency") then
		gui.set_text(gui.get_node("GPU"), "GPU speed: "..(message.freq / 0.64).." %")
	end
end

function on_input(self, action_id, action)
	if action_id == hash("key_space") and action.pressed then
		start_level(self)
	end
end